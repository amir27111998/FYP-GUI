#: import icon kivysome.icon

<AppNavigator>:
    StartWindow
    ModulesWindow
    SettingWindow
    ResearchWindow
    VideoMode

<StartWindow>:
    project_lbl: _project_lbl
    start_button: _start_button
    name: 'start-screen'
    canvas:
        Rectangle:
            source:'images/background.png'
            size: self.size
            pos: self.pos
    RelativeLayout:
        AnchorLayout:
            anchor_x:'center'
            anchor_y:'center'
            StartButton:
                id: _start_button
                markup: True
                text:'Start Project     %s' % icon('arrow-right', 20, 'ffff00')
                size_hint: None, None
                size: (260.0, 70.0)
                font_size: 20
                font_name: 'fonts\BRLNSDB'
                on_press: root.animate_button()
                radius: [40]
        Label:
            id: _project_lbl
            text:'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Phasellus hendrerit. \n et blandit nunc tortor eu nibh. Nullam mollis. Ut justo. Suspendisse potenti.'
            pos: '0dp', '-150dp'
            halign: 'center'
            do_layout: root.animate()
        Image:
            source: 'images/carla-logo.png'
            pos: '0dp','180dp'
        


<ModulesWindow>:
    setting_button: _setting_button
    name: 'modules-screen'
    RelativeLayout:
        canvas.before:
            Rectangle:
                size: self.size
                pos: self.pos
                source: 'images/background.png'
        
        AnchorLayout:
            anchor_x: 'left'
            anchor_y: 'top'
            BackButton:
                markup: True
                text:'%s   Back' % icon('chevron-left', 16 , 'ffffff')
                font_size: 16
                color: (1,1,1,1)
                size_hint: None, None 
                size: '150dp','50dp'
                radius: [0, 30, 30, 0]
                on_press: root.back()
        
        AnchorLayout:
            anchor_x: 'right'
            anchor_y: 'bottom'
            pos: -30, 30.2
            SettingButton:
                id: _setting_button
                markup: True
                text:'%s' % icon('cogs', 26 , 'ffffff')
                font_size: 24
                size_hint: None, None 
                size: '60dp','60dp'
                radius: [50]
                on_press: root.setting_animate()
        
        GridLayout:
            cols: 3
            AnchorLayout:
                anchor_y: 'center'
                anchor_x: 'center'
                padding: 30
                FloatLayout:
                    size_hint: 1, 0.35
                    canvas.before:
                        Color:
                            rgba: (0, 0, 0, 1)
                        Rectangle:
                            pos: self.pos
                            size: self.size
                    Image:
                        # size_hint: 1.1, 0.47
                        pos_hint: {'center_x': 0.5, 'center_y': 0.68}
                        source: 'images/mode-1.jpg'
                    
                    Button:
                        markup: True
                        size_hint: 1, 0.34
                        pos_hint: {'center_x': 0.5, 'center_y': 0.17}
                        font_size: 18
                        text:'%s  Realtime Mode' % icon('stopwatch', 17, 'ffff00')
                        font_name: 'fonts\BRLNSDB'
                        background_color:(0,0,0,0)
                    
                    
                    
                
            AnchorLayout:
                anchor_y: 'center'
                anchor_x: 'center'
                padding: 30
                FloatLayout:
                    size_hint: 1, 0.35
                    canvas.before:
                        Color:
                            rgba: (0, 0, 0, 1)
                        Rectangle:
                            pos: self.pos
                            size: self.size
                    Image:
                        # size_hint: 1.1, 0.47
                        pos_hint: {'center_x': 0.5, 'center_y': 0.68}
                        source: 'images/mode-2.png'
                    
                    Button:
                        markup: True
                        size_hint: 1, 0.34
                        pos_hint: {'center_x': 0.5, 'center_y': 0.17}
                        font_size: 18
                        text:'%s  Video Mode' % icon('play-circle', 17, 'ffff00')
                        font_name: 'fonts\BRLNSDB'
                        background_color:(0,0,0,0)
                        on_press: root.video_window()

            AnchorLayout:
                anchor_y: 'center'
                anchor_x: 'center'
                padding: 30
                FloatLayout:
                    size_hint: 1, 0.35
                    canvas.before:
                        Color:
                            rgba: (0, 0, 0, 1)
                        Rectangle:
                            pos: self.pos
                            size: self.size
                    Image:
                        # size_hint: 1.1, 0.47
                        pos_hint: {'center_x': 0.5, 'center_y': 0.68}
                        source: 'images/mode-3.jpg'
                    
                    Button:
                        markup: True
                        size_hint: 1, 0.34
                        pos_hint: {'center_x': 0.5, 'center_y': 0.17}
                        font_size: 18
                        text:'%s  Research Work' % icon('user-graduate', 17, 'ffff00')
                        font_name: 'fonts\BRLNSDB'
                        background_color:(0,0,0,0)
                        on_press: root.research_window()




<SettingWindow>:
    host: _host
    port: _port
    rendering_mode: _rendering_mode
    timer: _timer
    record: _record
    save_button: _save
    font: 'fonts\BRLNSDB'
    name: 'settings-screen'
    on_enter: root.init_settings()
    BoxLayout:
        orientation: 'vertical'
        canvas.before:
            Rectangle:
                pos:self.pos
                size:self.size
                source: 'images/background.png'
        
        AnchorLayout:
            anchor_x: 'left'
            anchor_y: 'top'
            size_hint_y: None
            size: ('200dp', '150dp')
            StackLayout:
                orientation: 'lr-tb'
                BackButton2:
                    markup: True
                    text:'%s   Back' % icon('chevron-left', 16 , 'ffffff')
                    font_size: 16
                    color: (1,1,1,1)
                    size_hint: None, None 
                    size: '150dp','50dp'
                    radius: [0, 30, 30, 0]
                    on_press: root.back()
                Label:
                    text:'Settings'
                    font_name: root.font
                    font_size: 40
                    color: (0,0,0,1)
                    size_hint:(0.2, 0.4)
        GridLayout:
            rows: 10
            padding: ('50dp', '50dp', '50dp', '50dp')
            size_hint_x: 0.6
            pos_hint: {'center_x': 0.5}
            canvas.before:
                Color:
                    rgba:(1,1,1,0.3)
                RoundedRectangle:
                    pos:self.pos
                    size:self.size
                    radius: [30]
            StackLayout:
                orientation: 'lr-tb'
                size_hint: (1, None)
                height: 50
                Label:
                    text: 'Host'
                    size_hint: (None, None)
                    height: 30
                    width: 200
                    font_name: root.font
                TextInput:
                    id: _host
                    text:'localhost'
                    size_hint: (.5, None)
                    height: 30
                    multiline: False
                    font_name: root.font
            StackLayout:
                orientation: 'lr-tb'
                size_hint: (1, None)
                height: 50
                Label:
                    text: 'Port'
                    size_hint: (None, None)
                    height: 30
                    width: 200
                    font_name: root.font
                TextInput:
                    id: _port
                    text:'2000'
                    size_hint: (.5, None)
                    height: 30
                    multiline: False
                    font_name: root.font
            StackLayout:
                orientation: 'lr-tb'
                size_hint: (1, None)
                height: 50
                Label:
                    text: 'Rendering Mode'
                    size_hint: (None, None)
                    height: 30
                    width: 283
                    font_name: root.font
                Switch:
                    id : _rendering_mode
                    size_hint: (None, None)
                    height: 30
                    width: 100
            StackLayout:
                orientation: 'lr-tb'
                size_hint: (1, None)
                height: 50
                Label:
                    text: 'Timer'
                    size_hint: (None, None)
                    height: 30
                    width: 210
                    font_name: root.font
                Slider:
                    id : _timer
                    size_hint: (None, None)
                    min: 100
                    max: 1000
                    value: 500
                    height: 30
                    width: 210
                Label:
                    text: str(int(_timer.value))
                    font_name: root.font
                    font_size: 20
                    color: (1,1,1,1)
                    size_hint: (None, None)
                    height: 30
                    width: 65

            StackLayout:
                orientation: 'lr-tb'
                size_hint: (1, None)
                height: 50
                Label:
                    text: 'Recording'
                    size_hint: (None, None)
                    height: 30
                    width: 240
                    font_name: root.font
                Switch:
                    id : _record
                    size_hint: (None, None)
                    height: 30
                    width: 186
                
            RelativeLayout:
                SaveSettingButton:
                    id: _save 
                    text: "Save Settings"
                    font_name: root.font
                    font_size: 22
                    size_hint: 0.35, 0.7
                    radius: [30]
                    pos_hint: {'center_x':0.5 , 'center_y': 0.2}
                    on_press: root.animate_button()
                


        RelativeLayout:
            size_hint_y: 0.2

<ResearchWindow>:
    name: 'research-screen'
    font: 'fonts\BRLNSDB'
    RelativeLayout:
        canvas.before:
            Rectangle:
                size: self.size
                pos: self.pos
                source: 'images/background.png'
        
        ScrollView:
            do_scroll_x: False
            do_scroll_y: True

            RelativeLayout:
                
                
                size_hint: (1, None)
                height:1500
                
                AnchorLayout:
                    anchor_x: 'left'
                    anchor_y: 'top'
                    BackButton3:
                        markup: True
                        on_press: root.back()
                        text:'%s   Back' % icon('chevron-left', 16 , 'ffffff')
                        font_size: 16
                        color: (1,1,1,1)
                        size_hint: None, None 
                        size: '150dp','50dp'
                        radius: [0, 30, 30, 0]
                
                GridLayout:
                    canvas.before:
                        Color:
                            rgba:(1,1,1,0.3)
                        RoundedRectangle:
                            radius:[20]
                            size: self.size
                            pos: self.pos
                    rows:1
                    cols:2
                    size_hint: (0.8, None)
                    height:250
                    pos_hint: {'x': 0.1, 'y' : 0.78}
                    padding: ('50dp', '50dp', '50dp', '50dp')
                    BoxLayout:
                        orientation: 'vertical'
                        Label:
                            text:'U-Net'
                            font_size: 20
                            text_size: self.size
                            font_name: root.font
                            valign: 'top'
                            halign: 'left'
                            size_hint: 1, None
                            height: 30
                        Label:
                            text:'We have taken the road samples as a dataset and then started to use MATLAB to separate out road from the image which was our region of interest. We got to know that we cannot perform this task from simple segmentation because the sample we took were in different varieties so there was a high chance of misjudging the road. So after that we shifted our approach to deep learning models in order to find the ROI. We started using U-NET Model as our first approach. It was based on a encoder’s decoders architecture of CNN.\nWe have modified the U-NET architecture such as it takes the input image of size 1280x720 and output the same dimension image containing the mask on the road.'
                            text_size: self.size
                            valign: 'top'
                            font_size: 12
                            font_name: root.font
                            halign: 'left'
                            size_hint: 1, None
                            height: 180
                        
                    Image:
                        # size_hint: (0.8, 0.2) 
                        source:'images/u-net.jpeg'
                        size_hint: 1, None
                        height: 170

                GridLayout:
                    canvas.before:
                        Color:
                            rgba:(1,1,1,0.3)
                        RoundedRectangle:
                            radius:[20]
                            size: self.size
                            pos: self.pos
                    rows:1
                    cols:2
                    size_hint: (0.8, None)
                    height:250
                    pos_hint: {'x': 0.1, 'y' :0.6}
                    padding: ('50dp', '50dp', '50dp', '50dp')
                    BoxLayout:
                        orientation: 'vertical'
                        Label:
                            text:'Mask RCNN'
                            font_size: 20
                            text_size: self.size
                            font_name: root.font
                            valign: 'top'
                            halign: 'left'
                            size_hint: 1, None
                            height: 30
                        Label:
                            text:'Mask RCNN is a deep neural network intended to tackle instance segmentation issue in ML or Computer vision. All in all, it can isolate various items in a picture or a video. You give it a picture, it gives you the item bounding boxes, classes and masks. There are two phases of Mask RCNN. To start with, it produces recommendations about the regions where there may be an item dependent on the image. Second, it predicts the class of the item, refines the bounding box and creates a pixel level mask of the object dependent on the initial stage. The two phases are associated with the backbone structure.'
                            text_size: self.size
                            font_name: root.font
                            valign: 'top'
                            halign: 'left'
                            font_size: 12
                            size_hint: 1, None
                            height: 180
                        
                    Image:
                        # size_hint: (0.8, 0.2) 
                        source:'images/mask-rcnn.jpg'
                        size_hint: 1, None
                        height: 170

                GridLayout:
                    canvas.before:
                        Color:
                            rgba:(1,1,1,0.3)
                        RoundedRectangle:
                            radius:[20]
                            size: self.size
                            pos: self.pos
                    rows:1
                    cols:2
                    size_hint: (0.8, None)
                    height:250
                    pos_hint: {'x': 0.1, 'y' :0.4}
                    padding: ('50dp', '50dp', '50dp', '50dp')
                    BoxLayout:
                        orientation: 'vertical'
                        Label:
                            text:'YOLACT'
                            font_size: 20
                            font_name: root.font
                            text_size: self.size
                            valign: 'top'
                            halign: 'left'
                            size_hint: 1, None
                            height: 30
                        Label:
                            text:'YOLACT addresses the problem of instance segmentation is by breaking the task into two smaller tasks that run in parallel: generating a dictionary of prototype masks and predicting a set of linear combination coefficients per instance. In this way, the method implicitly learns to localize the instance masks and therefore it is able to skip the localization step that is very common in instance segmentation methods.'
                            text_size: self.size
                            font_name: root.font
                            font_size: 12
                            valign: 'top'
                            halign: 'left'
                            size_hint: 1, None
                            height: 140
                        
                    Image:
                        # size_hint: (0.8, 0.2) 
                        source:'images/yolact.jpg'
                        size_hint: 1, None
                        height: 170
                    
                GridLayout:
                    canvas.before:
                        Color:
                            rgba:(1,1,1,0.3)
                        RoundedRectangle:
                            radius:[20]
                            size: self.size
                            pos: self.pos
                    rows:1
                    cols:2
                    size_hint: (0.8, None)
                    height:250
                    pos_hint: {'x': 0.1, 'y' :0.2}
                    padding: ('50dp', '50dp', '50dp', '50dp')
                    BoxLayout:
                        orientation: 'vertical'
                        Label:
                            text:'Dataset Labeling'
                            font_size: 20
                            text_size: self.size
                            font_name: root.font
                            valign: 'top'
                            halign: 'left'
                            size_hint: 1, None
                            height: 30
                        Label:
                            text:'The action of annotating a text or diagram, here we have annotated road data to make our machine or algorithm learn the "REGION OF INTEREST", obviously we human beings can differentiate by just a gaze but machine needs the whole algorithm and at the backend algorithm needs data. We have used CVAT as a labeling tool and drew the mask on the set of images we had taken from road.'
                            text_size: self.size
                            font_name: root.font
                            font_size: 12
                            valign: 'top'
                            halign: 'left'
                            size_hint: 1, None
                            height: 140
                        
                    Image:
                        # size_hint: (0.8, 0.2) 
                        source:'images/labelling.jpg'
                        size_hint: 1, None
                        height: 170
                
                GridLayout:
                    canvas.before:
                        Color:
                            rgba:(1,1,1,0.3)
                        RoundedRectangle:
                            radius:[20]
                            size: self.size
                            pos: self.pos
                    rows:1
                    cols:2
                    size_hint: (0.8, None)
                    height:250
                    pos_hint: {'x': 0.1, 'y' :0}
                    padding: ('50dp', '50dp', '50dp', '50dp')
                    BoxLayout:
                        orientation: 'vertical'
                        Label:
                            text:'Pothole Detection & Distance Calculation'
                            font_size: 20
                            font_name: root.font
                            text_size: self.size
                            valign: 'top'
                            halign: 'left'
                            size_hint: 1, None
                            height: 50
                        Label:
                            text:'We have used YOLACT model to detect potholes which we have elaborated above. After detecting the pothole, we classify them into passable or non-passable potholes and then calculate the distance between the pothole and the car by using inverse perspective transformation which will help us in making speed adjustments.'
                            text_size: self.size
                            font_name: root.font
                            font_size: 12
                            valign: 'top'
                            halign: 'left'
                            size_hint: 1, None
                            height: 140
                        
                    Image:
                        # size_hint: (0.8, 0.2) 
                        source:'images/distanc.png'
                        size_hint: 1, None
                        height: 170




<VideoMode>:
    name: 'video_mode-screen'
    font: 'fonts\BRLNSDB'
    RelativeLayout:
        canvas.before:
            Rectangle:
                size: self.size
                pos: self.pos
                source: 'images/background.png'
        

        RelativeLayout:
            AnchorLayout:
                anchor_x: 'left'
                anchor_y: 'top'
                BackButton4:
                    markup: True
                    on_press: root.back()
                    text:'%s   Back' % icon('chevron-left', 16 , 'ffffff')
                    font_size: 16
                    color: (1,1,1,1)
                    size_hint: None, None 
                    size: '150dp','50dp'
                    radius: [0, 30, 30, 0]
            
            GridLayout:
                rows:3
                cols:3
                pos_hint: {'center_y': 0.4}
                padding: ('40dp', '40dp', '40dp', '40dp')
                StackLayout:
                    orientation: 'lr-tb'
                    Button:
                        id: _real_one
                        canvas.before:
                            RoundedRectangle:
                                pos:self.pos
                                size: self.size
                                source: 'images/demo-1.JPG'
                                radius: [20]
                        size_hint: None,None
                        size: '250dp', '150dp'
                        background_color:(0,0,0,0)
                        on_press: root.open_window('real-demo-1.avi', self)
                StackLayout:
                    orientation: 'lr-tb'
                    Button:
                        id: _real_two
                        canvas.before:
                            RoundedRectangle:
                                pos:self.pos
                                size: self.size
                                source: 'images/demo-2.JPG'
                                radius: [20]
                        size_hint: None,None
                        size: '250dp', '150dp'
                        background_color:(0,0,0,0)
                        on_press: root.open_window('real-demo-2.mp4', self)
                StackLayout:
                    orientation: 'lr-tb'
                    Button:
                        id: _carla
                        canvas.before:
                            RoundedRectangle:
                                pos:self.pos
                                size: self.size
                                source: 'images/demo-3.JPG'
                                radius: [20]
                        size_hint: None,None
                        size: '250dp', '150dp'
                        background_color:(0,0,0,0)
                        on_press: root.open_window('carla-demo.avi', self)
                StackLayout:
                    orientation: 'lr-tb'
                    Button:
                        id: _carla
                        canvas.before:
                            RoundedRectangle:
                                pos:self.pos
                                size: self.size
                                source: 'images/demo-3.JPG'
                                radius: [20]
                        size_hint: None,None
                        size: '250dp', '150dp'
                        background_color:(0,0,0,0)
                        on_press: root.open_window('carla-demo.avi', self)

                StackLayout:
                    orientation: 'lr-tb'
                    Button:
                        id: _carla
                        canvas.before:
                            RoundedRectangle:
                                pos:self.pos
                                size: self.size
                                source: 'images/demo-3.JPG'
                                radius: [20]
                        size_hint: None,None
                        size: '250dp', '150dp'
                        background_color:(0,0,0,0)
                        on_press: root.open_window('carla-demo.avi', self)

                StackLayout:
                    orientation: 'lr-tb'
                    Button:
                        id: _carla
                        canvas.before:
                            RoundedRectangle:
                                pos:self.pos
                                size: self.size
                                source: 'images/demo-3.JPG'
                                radius: [20]
                        size_hint: None,None
                        size: '250dp', '150dp'
                        background_color:(0,0,0,0)
                        on_press: root.open_window('carla-demo.avi', self)


            
         

# # Custom Widtget
<StartButton@Button>
    background_color: (0,0,0,0)
    radius: [0,0,0,0]
    canvas.before:
        Color: 
            rgba: (0,0,0,1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: self.radius
<SettingButton@Button>
    background_color: (0,0,0,0)
    radius: [0,0,0,0]
    canvas.before:
        Color: 
            rgba: (0,0,0,1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: self.radius

<BackButton@Button>
    background_color: (0,0,0,0)
    radius: [0,0,0,0]
    canvas.before:
        Color: 
            rgba: (0,0,0,1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: self.radius

<BackButton2@Button>
    background_color: (0,0,0,0)
    radius: [0,0,0,0]
    canvas.before:
        Color: 
            rgba: (0,0,0,1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: self.radius
<BackButton3@Button>
    background_color: (0,0,0,0)
    radius: [0,0,0,0]
    canvas.before:
        Color: 
            rgba: (0,0,0,1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: self.radius
<BackButton4@Button>
    background_color: (0,0,0,0)
    radius: [0,0,0,0]
    canvas.before:
        Color: 
            rgba: (0,0,0,1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: self.radius

<SaveSettingButton@Button>
    background_color: (0,0,0,0)
    radius: [0,0,0,0]
    canvas.before:
        Color: 
            rgba: (0,0,0,1)
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: self.radius